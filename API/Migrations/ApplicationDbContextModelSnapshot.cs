// <auto-generated />
using System;
using API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace API.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("API.Models.Fixture", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("LocationId")
                        .HasColumnType("int");

                    b.Property<int>("TeamOneId")
                        .HasColumnType("int");

                    b.Property<int>("TeamTwoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LocationId");

                    b.HasIndex("TeamOneId");

                    b.HasIndex("TeamTwoId");

                    b.ToTable("Fixtures");
                });

            modelBuilder.Entity("API.Models.Location", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Locations");
                });

            modelBuilder.Entity("API.Models.Team", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Abbreviation")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("LeaguePosition")
                        .HasColumnType("int");

                    b.Property<int>("SeasonDrawn")
                        .HasColumnType("int");

                    b.Property<int>("SeasonGoalDifference")
                        .HasColumnType("int");

                    b.Property<int>("SeasonGoalsAgainst")
                        .HasColumnType("int");

                    b.Property<int>("SeasonGoalsFor")
                        .HasColumnType("int");

                    b.Property<int>("SeasonLost")
                        .HasColumnType("int");

                    b.Property<int>("SeasonPlayed")
                        .HasColumnType("int");

                    b.Property<int>("SeasonPoints")
                        .HasColumnType("int");

                    b.Property<int>("SeasonWon")
                        .HasColumnType("int");

                    b.Property<string>("Sponsor")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("TeamName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("TotalDrawn")
                        .HasColumnType("int");

                    b.Property<int>("TotalGoalDifference")
                        .HasColumnType("int");

                    b.Property<int>("TotalGoalsAgainst")
                        .HasColumnType("int");

                    b.Property<int>("TotalGoalsFor")
                        .HasColumnType("int");

                    b.Property<int>("TotalLost")
                        .HasColumnType("int");

                    b.Property<int>("TotalPlayed")
                        .HasColumnType("int");

                    b.Property<int>("TotalPoints")
                        .HasColumnType("int");

                    b.Property<int>("TotalWon")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Teams");
                });

            modelBuilder.Entity("API.Models.Fixture", b =>
                {
                    b.HasOne("API.Models.Location", "Location")
                        .WithMany()
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("API.Models.Team", "TeamOne")
                        .WithMany()
                        .HasForeignKey("TeamOneId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("API.Models.Team", "TeamTwo")
                        .WithMany()
                        .HasForeignKey("TeamTwoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Location");

                    b.Navigation("TeamOne");

                    b.Navigation("TeamTwo");
                });
#pragma warning restore 612, 618
        }
    }
}
